<launch>

	<!-- Some general parameters -->
	<param name="use_sim_time" value="true" />
	

	<!-- Start Stage simulator with a given environment -->
	<node name="Stage" pkg="stage_ros" type="stageros" args="$(find nav2d_tutorials)/world/tutorial4.world">
		<param name="base_watchdog_timeout" value="0" />
	</node>

    <node name="R0_MapAlign" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 /map /robot_0/map 100"/>
    <node name="R1_MapAlign" pkg="tf" type="static_transform_publisher" args="50 0 0 0 0 0 /map /robot_1/map 100"/> 

	<group ns = "robot_0">
    <!-- Some general parameters -->
    <rosparam file="$(find nav2d_tutorials)/param/ros.yaml"/>
        <param name="robot_id" value="1" />
        <param name="tf_prefix" type="string" value="robot_0"/>
	<!-- Start the Operator to control the simulated robot -->
	<node name="Operator" pkg="nav2d_operator" type="operator" >
		<remap from="scan" to="base_scan"/>
		<rosparam file="$(find nav2d_tutorials)/param/operator.yaml"/>
		<rosparam file="$(find nav2d_tutorials)/param/costmap.yaml" ns="local_map" />
	</node>

	<!-- Start Mapper to genreate map from laser scans -->
	<node name="Mapper" pkg="nav2d_karto" type="mapper">
		<remap from="scan" to="base_scan"/>
		<rosparam file="$(find nav2d_tutorials)/param/mapper.yaml"/>
	</node>

	<!-- Start the Navigator to move the robot autonomously -->
	<node name="Navigator" pkg="nav2d_navigator" type="navigator">
		<rosparam file="$(find nav2d_tutorials)/param/navigator.yaml"/>
	</node>

	<node name="GetMap" pkg="nav2d_navigator" type="get_map_client" />
	<node name="Explore" pkg="nav2d_navigator" type="explore_client" />
	<node name="SetGoal" pkg="nav2d_navigator" type="set_goal_client" />

	<!-- Start the joystick-driver and remote-controller for operation-->
	<!-- <node name="Joystick" pkg="joy" type="joy_node" />
	<node name="Remote" pkg="nav2d_remote" type="remote_joy" /> -->
	</group>	

	<group ns = "robot_1">
    <rosparam file="$(find nav2d_tutorials)/param/ros.yaml"/>
    <!-- Some general parameters -->
        <param name="robot_id" value="2" />
        <param name="tf_prefix" type="string" value="robot_1"/>
	<!-- Start the Operator to control the simulated robot -->
	<node name="Operator" pkg="nav2d_operator" type="operator" >
		<remap from="scan" to="base_scan"/>
		<rosparam file="$(find nav2d_tutorials)/param/operator.yaml"/>
		<rosparam file="$(find nav2d_tutorials)/param/costmap.yaml" ns="local_map" />
	</node>

	<!-- Start Mapper to genreate map from laser scans -->
	<node name="Mapper" pkg="nav2d_karto" type="mapper">
		<remap from="scan" to="base_scan"/>
		<rosparam file="$(find nav2d_tutorials)/param/mapper.yaml"/>
	</node>

	<!-- Start the Navigator to move the robot autonomously -->
	<node name="Navigator" pkg="nav2d_navigator" type="navigator">
		<rosparam file="$(find nav2d_tutorials)/param/navigator.yaml"/>
	</node>

	<node name="GetMap" pkg="nav2d_navigator" type="get_map_client" />
	<node name="Explore" pkg="nav2d_navigator" type="explore_client" />
	<node name="SetGoal" pkg="nav2d_navigator" type="set_goal_client" />

	<!-- Start the joystick-driver and remote-controller for operation-->
	<!-- <node name="Joystick" pkg="joy" type="joy_node" />
	<node name="Remote" pkg="nav2d_remote" type="remote_joy" /> -->
	</group>	

	<!-- RVIZ to view the visualization -->
	<node name="RVIZ" pkg="rviz" type="rviz" args=" -d $(find nav2d_tutorials)/param/map_merge.rviz" />
	
    <group ns="map_merge">
        <node pkg="multirobot_map_merge" type="map_merge" respawn="false" name="map_merge" output="screen">
            <param name="robot_map_topic" value="map"/>
            <param name="robot_namespace" value="/"/>
            <param name="merged_map_topic" value="finalmap"/>
            <param name="world_frame" value="map"/>
            <param name="known_init_poses" value="false"/>
            <param name="merging_rate" value="0.5"/>
            <param name="discovery_rate" value="0.05"/>
            <param name="estimation_rate" value="0.8"/>
            <param name="estimation_confidence" value="0.6"/>
        </node>
    </group>

</launch>
