<launch>


	<!-- Some general parameters -->
	<param name="use_sim_time" value="true" />

	<!-- Start Stage simulator with a given environment -->
	<node name="Stage" pkg="stage_ros" type="stageros" args="$(find nav2d_tutorials)/world/tutorial4.world">
		<param name="base_watchdog_timeout" value="0" />
	</node>
<node name="R0_MapAlign" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 /map /robot_0/map 100"/>
<node name="R1_MapAlign" pkg="tf" type="static_transform_publisher" args="40 0 0 0 0 0 /map /robot_1/map 100"/>

 <group ns="robot_0">
    <param name="robot_id" value="1" />
    <param name="tf_prefix" type="string" value="robot_0"/>
    <rosparam file="$(find nav2d_tutorials)/param/ros.yaml"/>

    <!-- Start the Operator to control the simulated robot -->
	<node name="Operator" pkg="nav2d_operator" type="operator" >
		<remap from="scan" to="base_scan"/>
		<rosparam file="$(find nav2d_tutorials)/param/operator.yaml"/>
		<rosparam file="$(find nav2d_tutorials)/param/costmap.yaml" ns="local_map" />
	</node>

    <node name="Mapper" pkg="nav2d_karto" type="mapper">
        <remap from="scan" to="base_scan"/>
        <remap from="karto_in" to="/shared_scans_r2"/>
        <remap from="karto_out" to="/shared_scans_r1"/>
        <rosparam file="$(find nav2d_tutorials)/param/mapper.yaml"/>
    </node>

    	<!-- Start the Navigator to move the robot autonomously -->
	<node name="Navigator" pkg="nav2d_navigator" type="navigator">
		<rosparam file="$(find nav2d_tutorials)/param/navigator.yaml"/>
	</node>

	<node name="GetMap" pkg="nav2d_navigator" type="get_map_client" />
	<node name="Explore" pkg="nav2d_navigator" type="explore_client" />
	<node name="SetGoal" pkg="nav2d_navigator" type="set_goal_client" />

    <!-- <node pkg="robot_state_publisher" type="state_publisher" name="robot_state_publisher">
        <param name="publish_frequency" type="double" value="30.0"/>
    </node> -->

    <!-- <node pkg="p2os_urdf" type="publisher" name="publisher"/> -->
<!-- 
    <node pkg="robot_state_publisher" type="state_publisher" name="robot_state_publisher">
        <param name="publish_frequency" type="double" value="30.0"/>
    </node> -->

    <!-- <param name="robot_description" command="$(find xacro)/xacro -
    -inorder $(find turtlebot3_description)/urdf/turtlebot3_burger.urdf.xacro" /> -->
</group>

<group ns="robot_1">
    <param name="robot_id" value="2" />
    <param name="tf_prefix" type="string" value="robot_1"/>
    <rosparam file="$(find nav2d_tutorials)/param/ros.yaml"/>

    <!-- Start the Operator to control the simulated robot -->
	<node name="Operator" pkg="nav2d_operator" type="operator" >
		<remap from="scan" to="base_scan"/>
		<rosparam file="$(find nav2d_tutorials)/param/operator.yaml"/>
		<rosparam file="$(find nav2d_tutorials)/param/costmap.yaml" ns="local_map" />
	</node>

    <node name="Mapper" pkg="nav2d_karto" type="mapper">
        <remap from="scan" to="base_scan"/>
        <remap from="karto_in" to="/shared_scans_r1"/>
        <remap from="karto_out" to="/shared_scans_r2"/>
        <rosparam file="$(find nav2d_tutorials)/param/mapper.yaml"/>
    </node>

    	<!-- Start the Navigator to move the robot autonomously -->
	<node name="Navigator" pkg="nav2d_navigator" type="navigator">
		<rosparam file="$(find nav2d_tutorials)/param/navigator.yaml"/>
	</node>

	<node name="GetMap" pkg="nav2d_navigator" type="get_map_client" />
	<node name="Explore" pkg="nav2d_navigator" type="explore_client" />
	<node name="SetGoal" pkg="nav2d_navigator" type="set_goal_client" />

    <!-- <node pkg="robot_state_publisher" type="state_publisher" name="robot_state_publisher">
        <param name="publish_frequency" type="double" value="30.0"/>
    </node> -->

    <!-- <node pkg="p2os_urdf" type="publisher" name="publisher"/> -->
    <!-- <node pkg="robot_state_publisher" type="state_publisher" name="robot_state_publisher">
        <param name="publish_frequency" type="double" value="30.0"/>
    </node> -->

    <!-- <param name="robot_description" command="$(find xacro)/xacro -
    -inorder $(find turtlebot3_description)/urdf/turtlebot3_burger.urdf.xacro" /> -->
    </group>


    <node name="RVIZ" pkg="rviz" type="rviz" args=" -d $(find nav2d_tutorials)/param/tutorial4.rviz" />
 </launch>


